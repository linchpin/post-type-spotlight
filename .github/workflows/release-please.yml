on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    if: github.event_name != 'pull_request' && github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: php
          bump-minor-pre-major: true
          token: ${{ secrets.GH_BOT_TOKEN }}
          versioning-strategy: always-bump-patch

  build:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Version From Tag
        id: get_version
        uses: actions-ecosystem/action-get-latest-tag@v1.6.0
        with:
          semver_only: true

      - name: Latest Version
        id: latest_version
        run: |
          TAG=${{ steps.get_version.outputs.tag }}
          echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Composer Install
        uses: php-actions/composer@v6
        with:
          working_dir: ./
          dev: no
          php_version: 7.4

      - name: Build Base Plugin Assets
        run: |
          npm install && npm run build
          rm -rf node_modules

      - name: Build Frontend Scripts
        run: |
          cd ./frontend/
          npm install && npm run build
          rm -rf node_modules

      - name: Build Blocks
        run: |
          cd ./blocks/
          npm install && npm run build
          rm -rf node_modules

      - name: Clean Build Files/Folders
        run: |
          chmod +x ./.deployment/cleanup.sh
          sh ./.deployment/cleanup.sh;

      - name: Create Sync Zip
        run: |
          cd ./zip
          zip -r ../post-type-spotlight.zip ./
          cd ../

      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: post-type-spotlight.zip
          tag: ${{ steps.get_version.outputs.tag }}
          name: post-type-spotlight.zip
          overwrite: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            New Release
          draft: false
          prerelease: false
      - name: WordPress Plugin Deploy
        uses: 10up/action-wordpress-plugin-deploy@1.4.0
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
